package solutions.sulfura.hyperkit.test.entities;

import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.persistence.Column;
import jakarta.persistence.Id;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.OneToOne;
import jakarta.persistence.JoinColumn;
import java.time.LocalDateTime;
import java.util.Objects;

/**
 * Entity class for the APP_USER table.
 * Generated by HyperKit Entity Generator.
 */
@Entity
@Table(name = "APP_USER", schema = "PUBLIC")
public class AppUser {

    // <fields>
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", nullable = false)
    private Long id;
    @Column(name = "USERNAME", nullable = false)
    private String username;
    @Column(name = "EMAIL", nullable = false)
    private String email;
    @Column(name = "PASSWORD", nullable = false)
    private String password;
    @Column(name = "CREATED_AT", nullable = false)
    private LocalDateTime createdAt;
    @Column(name = "UPDATED_AT")
    private LocalDateTime updatedAt;
    @Column(name = "ACTIVE", nullable = false)
    private Boolean active;
    @Column(name = "USER_PREFERENCES_ID", nullable = false)
    private Long userPreferencesId;
    @OneToOne
    @Column(name = "USER_PREFERENCES_ID")
    private UserPreferences userPreferences;

    // </fields>

    public AppUser() {
    }

    // <getters-setters>
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public Boolean getActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public Long getUserPreferencesId() {
        return userPreferencesId;
    }

    public void setUserPreferencesId(Long userPreferencesId) {
        this.userPreferencesId = userPreferencesId;
    }

    public UserPreferences getUserPreferences() {
        return userPreferences;
    }

    public void setUserPreferences(UserPreferences userPreferences) {
        this.userPreferences = userPreferences;
    }

    // </getters-setters>

    public static Builder builder() {
        return new Builder();
    }

    // <builder>
    public static class Builder {

        private AppUser instance = new AppUser();

        public AppUser build() {
            return instance;
        }

        public Builder id(Long id) {
            instance.id = id;
            return this;
        }

        public Builder username(String username) {
            instance.username = username;
            return this;
        }

        public Builder email(String email) {
            instance.email = email;
            return this;
        }

        public Builder password(String password) {
            instance.password = password;
            return this;
        }

        public Builder createdAt(LocalDateTime createdAt) {
            instance.createdAt = createdAt;
            return this;
        }

        public Builder updatedAt(LocalDateTime updatedAt) {
            instance.updatedAt = updatedAt;
            return this;
        }

        public Builder active(Boolean active) {
            instance.active = active;
            return this;
        }

        public Builder userPreferencesId(Long userPreferencesId) {
            instance.userPreferencesId = userPreferencesId;
            return this;
        }

        public Builder userPreferences(UserPreferences userPreferences) {
            instance.userPreferences = userPreferences;
            return this;
        }

    }

    // </builder>

}